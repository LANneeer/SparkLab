from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from bot.infrastructure.states.main import Main

router = Router()


@router.message(Command("menu"))
async def menu(message: types.Message):
    await message.answer(
        text='<b>–ú–µ–Ω—é</b>',
        reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [
                    types.KeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å')
                ],
                [
                    types.KeyboardButton(text='–£–∑–Ω–∞—Ç—å –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞')
                ],
                [
                    types.KeyboardButton(text='–°–æ–æ–±—â–∏—Ç—å –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞')
                ],
                [
                    types.KeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
                ]
            ],
            resize_keyboard=True
        )
    )


@router.message("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å")
async def get_help(message: types.Message):
    await message.answer(
        text='<b>–°—Ç–µ–ø–µ–Ω–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏:</b>\n'
             '/level1 - –ú–∏–Ω–∏–º—É–º –ª—é–¥–µ–π, –º–Ω–æ–≥–æ –º–µ—Å—Ç\n'
             '/level2 - –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å, –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞\n'
             '/level3 - –ú–Ω–æ–≥–æ –ª—é–¥–µ–π, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –º–µ—Å—Ç–∞, –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç'
    )


@router.message("–£–∑–Ω–∞—Ç—å –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞")
async def get_crowd(message: types.Message):
    await message.answer(
        text="some data"
    )


@router.message("–°–æ–æ–±—â–∏—Ç—å –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞")
@router.message(Command("report"))
async def report(message: types.Message, state: FSMContext):
    await state.set_state(Main.report)
    await message.answer(
        text='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:',
        reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [
                    types.KeyboardButton(text='üü¢ level1')
                ],
                [
                    types.KeyboardButton(text='üü° level2')
                ],
                [
                    types.KeyboardButton(text='üî¥ level3')
                ],
            ],
            resize_keyboard=True
        )
    )


@router.message(Main.report)
async def passing_data(message: types.Message, state: FSMContext):
    await state.update_data(report=message.text)
    await state.set_state(Main.confirm)
    await message.answer(text=f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}\n'
                              '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É',
                         reply_markup=types.ReplyKeyboardMarkup(
                             keyboard=[
                                 [
                                     types.KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å')
                                 ],
                                 [
                                     types.KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å')
                                 ]
                             ],
                             resize_keyboard=True
                         )
                         )
